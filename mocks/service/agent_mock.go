// Code generated by MockGen. DO NOT EDIT.
// Source: ./services/agent_service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	models "AntarJemput-Be-C/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAgentServiceInterface is a mock of AgentServiceInterface interface.
type MockAgentServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAgentServiceInterfaceMockRecorder
}

// MockAgentServiceInterfaceMockRecorder is the mock recorder for MockAgentServiceInterface.
type MockAgentServiceInterfaceMockRecorder struct {
	mock *MockAgentServiceInterface
}

// NewMockAgentServiceInterface creates a new mock instance.
func NewMockAgentServiceInterface(ctrl *gomock.Controller) *MockAgentServiceInterface {
	mock := &MockAgentServiceInterface{ctrl: ctrl}
	mock.recorder = &MockAgentServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAgentServiceInterface) EXPECT() *MockAgentServiceInterfaceMockRecorder {
	return m.recorder
}

// GetAll mocks base method.
func (m *MockAgentServiceInterface) GetAll() ([]models.Agents, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]models.Agents)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockAgentServiceInterfaceMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockAgentServiceInterface)(nil).GetAll))
}

// GetById mocks base method.
func (m *MockAgentServiceInterface) GetById(id int) (models.Agents, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetById", id)
	ret0, _ := ret[0].(models.Agents)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetById indicates an expected call of GetById.
func (mr *MockAgentServiceInterfaceMockRecorder) GetById(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetById", reflect.TypeOf((*MockAgentServiceInterface)(nil).GetById), id)
}

// Save mocks base method.
func (m *MockAgentServiceInterface) Save(agent *models.Agents) (*models.Agents, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", agent)
	ret0, _ := ret[0].(*models.Agents)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Save indicates an expected call of Save.
func (mr *MockAgentServiceInterfaceMockRecorder) Save(agent interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockAgentServiceInterface)(nil).Save), agent)
}

// SearchAgent mocks base method.
func (m *MockAgentServiceInterface) SearchAgent(s int) ([]models.Agents, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchAgent", s)
	ret0, _ := ret[0].([]models.Agents)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchAgent indicates an expected call of SearchAgent.
func (mr *MockAgentServiceInterfaceMockRecorder) SearchAgent(s interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchAgent", reflect.TypeOf((*MockAgentServiceInterface)(nil).SearchAgent), s)
}
