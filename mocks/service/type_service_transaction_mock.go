// Code generated by MockGen. DO NOT EDIT.
// Source: ./services/type_service_transaction.go

// Package mocks is a generated GoMock package.
package mocks

import (
	models "AntarJemput-Be-C/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTSSInterface is a mock of TSSInterface interface.
type MockTSSInterface struct {
	ctrl     *gomock.Controller
	recorder *MockTSSInterfaceMockRecorder
}

// MockTSSInterfaceMockRecorder is the mock recorder for MockTSSInterface.
type MockTSSInterfaceMockRecorder struct {
	mock *MockTSSInterface
}

// NewMockTSSInterface creates a new mock instance.
func NewMockTSSInterface(ctrl *gomock.Controller) *MockTSSInterface {
	mock := &MockTSSInterface{ctrl: ctrl}
	mock.recorder = &MockTSSInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTSSInterface) EXPECT() *MockTSSInterfaceMockRecorder {
	return m.recorder
}

// GetAll mocks base method.
func (m *MockTSSInterface) GetAll() ([]models.TypeServiceTransaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]models.TypeServiceTransaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockTSSInterfaceMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockTSSInterface)(nil).GetAll))
}

// GetById mocks base method.
func (m *MockTSSInterface) GetById(id int) (models.TypeServiceTransaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetById", id)
	ret0, _ := ret[0].(models.TypeServiceTransaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetById indicates an expected call of GetById.
func (mr *MockTSSInterfaceMockRecorder) GetById(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetById", reflect.TypeOf((*MockTSSInterface)(nil).GetById), id)
}

// Save mocks base method.
func (m *MockTSSInterface) Save(ts *models.TypeServiceTransaction) (*models.TypeServiceTransaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", ts)
	ret0, _ := ret[0].(*models.TypeServiceTransaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Save indicates an expected call of Save.
func (mr *MockTSSInterfaceMockRecorder) Save(ts interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockTSSInterface)(nil).Save), ts)
}
