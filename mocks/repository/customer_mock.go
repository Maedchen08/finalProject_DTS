// Code generated by MockGen. DO NOT EDIT.
// Source: ./repositories/customer_repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	models "AntarJemput-Be-C/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCustomerRepoInterface is a mock of CustomerRepoInterface interface.
type MockCustomerRepoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockCustomerRepoInterfaceMockRecorder
}

// MockCustomerRepoInterfaceMockRecorder is the mock recorder for MockCustomerRepoInterface.
type MockCustomerRepoInterfaceMockRecorder struct {
	mock *MockCustomerRepoInterface
}

// NewMockCustomerRepoInterface creates a new mock instance.
func NewMockCustomerRepoInterface(ctrl *gomock.Controller) *MockCustomerRepoInterface {
	mock := &MockCustomerRepoInterface{ctrl: ctrl}
	mock.recorder = &MockCustomerRepoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCustomerRepoInterface) EXPECT() *MockCustomerRepoInterfaceMockRecorder {
	return m.recorder
}

// GetAll mocks base method.
func (m *MockCustomerRepoInterface) GetAll() ([]models.Customer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]models.Customer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockCustomerRepoInterfaceMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockCustomerRepoInterface)(nil).GetAll))
}

// GetById mocks base method.
func (m *MockCustomerRepoInterface) GetById(id int) (models.Customer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetById", id)
	ret0, _ := ret[0].(models.Customer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetById indicates an expected call of GetById.
func (mr *MockCustomerRepoInterfaceMockRecorder) GetById(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetById", reflect.TypeOf((*MockCustomerRepoInterface)(nil).GetById), id)
}

// Save mocks base method.
func (m *MockCustomerRepoInterface) Save(customer *models.Customer) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", customer)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Save indicates an expected call of Save.
func (mr *MockCustomerRepoInterfaceMockRecorder) Save(customer interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockCustomerRepoInterface)(nil).Save), customer)
}
