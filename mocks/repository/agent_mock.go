// Code generated by MockGen. DO NOT EDIT.
// Source: ./repositories/agent_repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	models "AntarJemput-Be-C/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAgentRepoInterface is a mock of AgentRepoInterface interface.
type MockAgentRepoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAgentRepoInterfaceMockRecorder
}

// MockAgentRepoInterfaceMockRecorder is the mock recorder for MockAgentRepoInterface.
type MockAgentRepoInterfaceMockRecorder struct {
	mock *MockAgentRepoInterface
}

// NewMockAgentRepoInterface creates a new mock instance.
func NewMockAgentRepoInterface(ctrl *gomock.Controller) *MockAgentRepoInterface {
	mock := &MockAgentRepoInterface{ctrl: ctrl}
	mock.recorder = &MockAgentRepoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAgentRepoInterface) EXPECT() *MockAgentRepoInterfaceMockRecorder {
	return m.recorder
}

// GetAgent mocks base method.
func (m *MockAgentRepoInterface) GetAgent() ([]models.Agents, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAgent")
	ret0, _ := ret[0].([]models.Agents)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAgent indicates an expected call of GetAgent.
func (mr *MockAgentRepoInterfaceMockRecorder) GetAgent() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAgent", reflect.TypeOf((*MockAgentRepoInterface)(nil).GetAgent))
}

// GetAgentId mocks base method.
func (m *MockAgentRepoInterface) GetAgentId(id int) (models.Agents, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAgentId", id)
	ret0, _ := ret[0].(models.Agents)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAgentId indicates an expected call of GetAgentId.
func (mr *MockAgentRepoInterfaceMockRecorder) GetAgentId(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAgentId", reflect.TypeOf((*MockAgentRepoInterface)(nil).GetAgentId), id)
}

// Save mocks base method.
func (m *MockAgentRepoInterface) Save(agent *models.Agents) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", agent)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Save indicates an expected call of Save.
func (mr *MockAgentRepoInterfaceMockRecorder) Save(agent interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockAgentRepoInterface)(nil).Save), agent)
}

// SearchAgent mocks base method.
func (m *MockAgentRepoInterface) SearchAgent(s int) ([]models.Agents, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchAgent", s)
	ret0, _ := ret[0].([]models.Agents)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchAgent indicates an expected call of SearchAgent.
func (mr *MockAgentRepoInterfaceMockRecorder) SearchAgent(s interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchAgent", reflect.TypeOf((*MockAgentRepoInterface)(nil).SearchAgent), s)
}
