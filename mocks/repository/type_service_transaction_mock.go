// Code generated by MockGen. DO NOT EDIT.
// Source: ./repositories/type_service_transaction_repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	models "AntarJemput-Be-C/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTypeServiceInterface is a mock of TypeServiceInterface interface.
type MockTypeServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockTypeServiceInterfaceMockRecorder
}

// MockTypeServiceInterfaceMockRecorder is the mock recorder for MockTypeServiceInterface.
type MockTypeServiceInterfaceMockRecorder struct {
	mock *MockTypeServiceInterface
}

// NewMockTypeServiceInterface creates a new mock instance.
func NewMockTypeServiceInterface(ctrl *gomock.Controller) *MockTypeServiceInterface {
	mock := &MockTypeServiceInterface{ctrl: ctrl}
	mock.recorder = &MockTypeServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTypeServiceInterface) EXPECT() *MockTypeServiceInterfaceMockRecorder {
	return m.recorder
}

// GetAll mocks base method.
func (m *MockTypeServiceInterface) GetAll() ([]models.TypeServiceTransaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]models.TypeServiceTransaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockTypeServiceInterfaceMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockTypeServiceInterface)(nil).GetAll))
}

// GetById mocks base method.
func (m *MockTypeServiceInterface) GetById(id int) (models.TypeServiceTransaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetById", id)
	ret0, _ := ret[0].(models.TypeServiceTransaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetById indicates an expected call of GetById.
func (mr *MockTypeServiceInterfaceMockRecorder) GetById(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetById", reflect.TypeOf((*MockTypeServiceInterface)(nil).GetById), id)
}

// Save mocks base method.
func (m *MockTypeServiceInterface) Save(typeService *models.TypeServiceTransaction) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", typeService)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Save indicates an expected call of Save.
func (mr *MockTypeServiceInterfaceMockRecorder) Save(typeService interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockTypeServiceInterface)(nil).Save), typeService)
}
